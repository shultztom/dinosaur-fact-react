{"version":3,"sources":["blue-dinosaur.svg","NewDinoButton.js","App.js","index.js"],"names":["module","exports","NewDinoButton","className","onClick","props","fetchData","Component","require","polyfill","axios","App","setState","name","description","config","headers","Pragma","params","id","state","get","then","response","status","data","Name","Description","console","log","catch","error","this","src","logo","alt","ReactDOM","render","document","getElementById"],"mappings":"oHAAAA,EAAOC,QAAU,IAA0B,2C,sNCY5BC,G,MAVf,iLACY,IAAD,OACP,OACE,4BAAQC,UAAU,eAAeC,QAAS,kBAAM,EAAKC,MAAMC,cAA3D,oBAHN,GAAmCC,cCGnCC,EAAQ,IAAeC,WACvB,IAAIC,EAAQF,EAAQ,IAmELG,E,YAhEb,aAAe,IAAD,8BACZ,+CAOFL,UAAY,WACV,EAAKM,SAAS,CACZC,KAAM,aACNC,YAAa,KAEf,IAAMC,EAAS,CACbC,QAAS,CAAEC,OAAQ,YACnBC,OAAQ,CAAEC,GAAI,EAAKC,MAAMP,OAE3BH,EACGW,IAAI,4DAA6DN,GACjEO,MAAK,SAAAC,GACoB,MAApBA,EAASC,OACX,EAAKZ,SAAS,CACZC,KAAMU,EAASE,KAAKC,KACpBZ,YAAaS,EAASE,KAAKE,eAG7BC,QAAQC,IAAI,6BACZ,EAAKjB,SAAS,CACZC,KAAM,4BACNC,YAAa,WAIlBgB,OAAM,SAAAC,GACLH,QAAQC,IAAI,6BACZ,EAAKjB,SAAS,CAAEC,KAAM,4BAA6BC,YAAa,WAjCpE,EAAKM,MAAQ,CACXP,KAAM,KACNC,YAAa,MAJH,E,iFAwCZkB,KAAK1B,c,+BAIL,OACE,yBAAKH,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAK8B,IAAKC,IAAM/B,UAAU,WAAWgC,IAAI,SACzC,wBAAIhC,UAAU,aAAd,oBAEF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,gBACb,2BAAI6B,KAAKZ,MAAMP,OAEjB,yBAAKV,UAAU,uBACb,2BAAI6B,KAAKZ,MAAMN,cAEjB,kBAAC,EAAD,CAAeR,UAAW0B,KAAK1B,kB,GA1DvBC,aCFlB6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f616d9ca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blue-dinosaur.f423445b.svg\";","import React, { Component } from \"react\";\n\nexport class NewDinoButton extends Component {\n  render() {\n    return (\n      <button className=\"styledButton\" onClick={() => this.props.fetchData()}>\n        New Dinosaur\n      </button>\n    );\n  }\n}\n\nexport default NewDinoButton;\n","import React, { Component } from \"react\";\nimport logo from \"./blue-dinosaur.svg\";\nimport \"./App.css\";\nimport \"./NewDinoButton\";\nimport NewDinoButton from \"./NewDinoButton\";\nrequire(\"es6-promise\").polyfill();\nvar axios = require(\"axios\");\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: null,\n      description: null\n    };\n  }\n\n  fetchData = () => {\n    this.setState({\n      name: \"Loading...\",\n      description: \"\"\n    });\n    const config = {\n      headers: { Pragma: \"no-cache\" },\n      params: { id: this.state.name }\n    };\n    axios\n      .get(\"https://dinosaur-facts-api.shultzlab.com/dinosaurs/random\", config)\n      .then(response => {\n        if (response.status === 200) {\n          this.setState({\n            name: response.data.Name,\n            description: response.data.Description\n          });\n        } else {\n          console.log(\"Error getting dinosaur :(\");\n          this.setState({\n            name: \"Error getting dinosaur :(\",\n            description: null\n          });\n        }\n      })\n      .catch(error => {\n        console.log(\"Error getting dinosaur :(\");\n        this.setState({ name: \"Error getting dinosaur :(\", description: null });\n      });\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">Dinosaur Facts!</h1>\n        </header>\n        <div className=\"dinosaurInfo\">\n          <div className=\"dinosaurName\">\n            <p>{this.state.name}</p>\n          </div>\n          <div className=\"dinosaurDescription\">\n            <p>{this.state.description}</p>\n          </div>\n          <NewDinoButton fetchData={this.fetchData} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n//registerServiceWorker();\n"],"sourceRoot":""}